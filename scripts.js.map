{"version":3,"sources":["webpack:///src/app/physics/page_phen.js","webpack:///src/app/physics/projectile.js","webpack:///src/app/physics/projectile_en.js","webpack:///src/app/header/header.js"],"names":[],"mappings":"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","file":"scripts.js","sourcesContent":["// Javascript f�r HTML5-Apps (Physik englisch)\r\n// 13.08.2014 - 07.12.2017\r\n\r\n// Konstanten:\r\n\r\nvar language = \"en\";                                                 // Abk�rzung f�r Sprache\r\nvar textPhysics = \"Physics\";                                         // Bezeichnung f�r Physik\r\nvar textCollection = \"Physics Apps\";                                 // Bezeichnung f�r Programmsammlung\r\nvar textTranslation = \"Translation:\";                                // Bezeichnung f�r �bersetzung\r\nvar textModification = \"Last modification\";                          // Bezeichnung f�r letzte �nderung\r\n\r\n// Array der Monatsnamen:\r\n\r\nvar month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n// Logo Physik-Apps:\r\n\r\nfunction logo (filename) {\r\n  var t = document.createElement(\"div\");                             // Neues div-Element (�bergeordnet)\r\n  t.setAttribute(\"id\",\"Index\");                                      // Attribut id setzen (Layout-Festlegung durch CSS-Datei)\r\n  var t1 = document.createElement(\"div\");                            // Neues div-Element (oben)\r\n  t1.setAttribute(\"id\",\"Index1\");                                    // Attribut id setzen (Layout-Festlegung durch CSS-Datei)\r\n  t.appendChild(t1);                                                 // div-Element hinzuf�gen\r\n  var t2 = document.createElement(\"div\");                            // Neues div-Element (unten)\r\n  t2.setAttribute(\"id\",\"Index2\");                                    // Attribut id setzen (Layout-Festlegung durch CSS-Datei)\r\n  t.appendChild(t2);                                                 // div-Element hinzuf�gen\r\n  var a1 = document.createElement(\"a\");                              // Neuer Link (f�r Logo)\r\n  a1.setAttribute(\"href\",\"index.html\");                              // Adresse f�r Inhaltsverzeichnis\r\n  var i = document.createElement(\"img\");                             // Neues Bild (Logo Physik)\r\n  i.setAttribute(\"src\",\"../ph/javaphys.gif\");                        // Pfadangabe (Bilddatei)\r\n  i.setAttribute(\"alt\",textPhysics);                                 // Alternativer Text\r\n  a1.appendChild(i);                                                 // Bild zum Link hinzuf�gen\r\n  t1.appendChild(a1);                                                // Link zum oberen div-Element hinzuf�gen\r\n  var a2 = document.createElement(\"a\");                              // Neuer Link (f�r Text)\r\n  a2.setAttribute(\"href\",\"index.html\");                              // Adresse f�r Inhaltsverzeichnis\r\n  a2.innerHTML = textCollection;                                     // Text f�r Link\r\n  t2.appendChild(a2);                                                // Link zum unteren div-Element hinzuf�gen\r\n  var body = document.getElementsByTagName(\"body\")[0];               // Body-Element\r\n  body.appendChild(t);                                               // �bergeordnetes div-Element hinzuf�gen\r\n  }\r\n\r\n// Datum nach dem Muster \"January 1, 2000\"\r\n// d ... Tag (1 bis 31)\r\n// m ... Monat (1 bis 12)\r\n// y ... Jahr\r\n\r\nfunction date (d, m, y) {\r\n  return month[m-1]+\" \"+d+\", \"+y;\r\n  }\r\n\r\n// Daten am Ende der Seite (URL, Lizenz, letzte �nderung, �bersetzer)\r\n\r\nfunction data (filename, d1, m1, y1, d2, m2, y2, trl) {\r\n  var body = document.getElementsByTagName(\"body\")[0];               // Body-Element\r\n  var p = document.createElement(\"p\");                               // Neuer Absatz\r\n  p.setAttribute(\"class\",\"Ende\");                                    // Klasse (Layout-Festlegung durch CSS-Datei)\r\n  var s = \"URL: http://www.walter-fendt.de/html5/ph\"+language+\"/\";   // Anfang der URL\r\n  s += filename+\"_\"+language+\".htm<br>\";                             // URL vervollst�ndigen, Zeilenumbruch\r\n  s += \"Walter Fendt, \"+date(d1,m1,y1)+\"<br>\";                       // Autor, Datum, Zeilenumbruch\r\n  if (trl) s += textTranslation+\" \"+trl+\"<br>\";                      // Ggf. �bersetzer, Zeilenumbruch\r\n  s += textModification+\": \"+date(d2,m2,y2)+\"<br>\";                  // Datum der letzten �nderung, Zeilenumbruch\r\n  var a = '<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">';\r\n  s += a+'<img alt=\"Creative Commons License\" style=\"border-width:0\" ';\r\n  s += 'src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /></a><br />';\r\n  s += 'This work is licensed under a ';\r\n  s += a+'Creative Commons Attribution-NonCommercial-ShareAlike ';\r\n  s += '4.0 International License</a>.';\r\n  p.innerHTML = s;                                                   // Inhalt des Absatzes\r\n  body.appendChild(p);                                               // Absatz hinzuf�gen\r\n  }\r\n\r\n// Leere Zeile\r\n\r\nfunction emptyLine () {\r\n  var e = document.createElement(\"div\");                             // Neues Div-Element\r\n  e.setAttribute(\"class\",\"Abstand\");                                 // Klasse (Layout-Festlegung durch CSS-Datei)\r\n  e.innerHTML = \"\\u0020\";                                            // Leerzeichen\r\n  return e;                                                          // R�ckgabewert\r\n  }\r\n\r\n// Seitenende insgesamt\r\n// filename ..... Dateiname (ohne Erweiterungen)\r\n// d1, m1, y1 ... Datum der Erstver�ffentlichung\r\n// d2, m2, y2 ... Datum der letzten �nderung\r\n\r\nfunction endPage (filename, d1, m1, y1, d2, m2, y2, trl) {\r\n  var body = document.getElementsByTagName(\"body\")[0];               // Body-Element\r\n  body.appendChild(emptyLine());                                     // Leere Zeile hinzuf�gen\r\n  var hr = document.createElement(\"hr\");                             // Trennstrich\r\n  hr.setAttribute(\"class\",\"Trennlinie\");                             // Klasse (Layout-Festlegung durch CSS-Datei)\r\n  body.appendChild(hr);                                              // Trennstrich hinzuf�gen\r\n  body.appendChild(emptyLine());                                     // Leere Zeile hinzuf�gen\r\n  logo(filename);                                                    // Logo\r\n  data(filename,d1,m1,y1,d2,m2,y2,trl);                              // Daten am Ende (URL, Autor, �bersetzer, letzte �nderung, Lizenz)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n// * Autor: Walter Fendt (www.walter-fendt.de)                                *\r\n\r\nvar colorBackground = \"#00FFFF\";\r\nvar colorGround = \"#008000\"\r\nvar colorPosition = \"#ff0000\";\r\nvar colorVelocity = \"#ff00ff\";                             // �r Geschwindigkeit\r\nvar colorAcceleration = \"#0000ff\";                         // �r Beschleunigung\r\nvar colorForce = \"#008020\";                                // �r Kraft\r\nvar colorAngle = \"#00ffff\";                                // �r Winkelmarkierung\r\ncolorClock1 = \"#808080\";                                   // �r Geh�use der Digitaluhr\r\ncolorClock2 = \"#000000\";                                   // �r Anzeige der Digitaluhr\r\ncolorClock3 = \"#ff0000\";                                   // �r Ziffern der Digitaluhr\r\n\r\n// Sonstige Konstanten:\r\n\r\nvar PI2 = 2*Math.PI;                                       // Abk�rzung f�r 2 pi\r\nvar DEG = Math.PI/180;                                     // 1 Grad (Bogenma�)\r\nvar FONT1 = \"normal normal bold 12px sans-serif\";          // Normaler Zeichensatz\r\nvar FONT2 = \"normal normal bold 16px monospace\";           // Zeichensatz f�r Digitaluhr\r\nvar xU = 50, yU = 270;                                     // Position des Ursprungs (Pixel)\r\n\r\n// Attribute:\r\n\r\nvar canvas, ctx;                                           // Zeichenfl�che, Grafikkontext\r\nvar width, height;                                         // Abmessungen der Zeichenfl�che (Pixel)\r\nvar bu1, bu2;                                              // Schaltkn�pfe (Zur�ck, Start)\r\nvar cbSlow;                                                // Optionsfeld (Zeitlupe)\r\nvar ipH, ipV, ipW, ipM, ipG;                               // Eingabefelder\r\nvar rbY, rbV, rbA, rbF, rbE;                               // Radiobuttons\r\nvar on;                                                    // Flag f�r Bewegung\r\nvar slow;                                                  // Flag f�r Zeitlupe\r\nvar t0;                                                    // Anfangszeitpunkt\r\nvar t;                                                     // Aktuelle Zeit (s)\r\nvar timer;                                                 // Timer f�r Animation\r\n\r\nvar g;                                                     // Fallbeschleunigung (m/s�)\r\nvar h0;                                                    // Ausgangsh�he (m)\r\nvar v0, v0x, v0y;                                          // Anfangsgeschwindigkeit (Betrag und Komponenten, m/s)\r\nvar alpha0;                                                // Wurfwinkel (Bogenma�)\r\nvar m;                                                     // Masse (kg)\r\nvar x, y;                                                  // Koordinaten (m)\r\nvar x0, y0;                                                // Koordinaten (Pixel)\r\nvar pix;                                                   // Umrechnungsfaktor (Pixel pro Meter)\r\nvar tW;                                                    // Flugdauer (s)\r\nvar w;                                                     // Wurfweite (m)\r\nvar hMax;                                                  // Maximale H�he (m)\r\nvar vyMax;                                                 // Maximum von vy (Betrag, m/s)\r\nvar e;                                                     // Gesamtenergie (J)\r\nvar nrSize;                                                // Dargestellte physikalische Gr��e\r\nvar pos1, pos2;                                            // Textpositionen (je nach Sprache)\r\n\r\n\r\nfunction getElement (id, text) {\r\n  var e = document.getElementById(id);                     // Element\r\n  if (text) e.innerHTML = text;                            // Text festlegen, falls definiert\r\n  return e;                                                // R�ckgabewert\r\n  }\r\n\r\n// Start:\r\n\r\nfunction start () {\r\n  canvas = getElement(\"cv\");                               // Zeichenfl�che\r\n  width = canvas.width; height = canvas.height;            // Abmessungen (Pixel)\r\n  ctx = canvas.getContext(\"2d\");                           // Grafikkontext\r\n  bu1 = getElement(\"bu1\",text01);                          // Resetknopf\r\n  bu2 = getElement(\"bu2\",text02[0]);                       // Startknopf\r\n  bu2.state = 0;                                           // Zun�chst Zustand vor dem Start\r\n  cbSlow = getElement(\"cbSlow\");                           // Optionsfeld Zeitlupe\r\n  cbSlow.checked = false;                                  // Zeitlupe zun�chst abgeschaltet\r\n  getElement(\"lbSlow\",text03);                             // Erkl�render Text (Zeitlupe)\r\n  getElement(\"ipHa\",text04);                               // Erkl�render Text (Ausgangsh�he)\r\n  ipH = getElement(\"ipHb\");                                // Eingabefeld (Ausgangsh�he)\r\n  getElement(\"ipHc\",meter);                                // Einheit (Ausgangsh�he)\r\n  getElement(\"ipVa\",text05);                               // Erk�render Text (Anfangsgeschwindigkeit)\r\n  ipV = getElement(\"ipVb\");                                // Eingabefeld (Anfangsgeschwindigkeit)\r\n  getElement(\"ipVc\",meterPerSecond);                       // Einheit (Anfangsgeschwindigkeit)\r\n  getElement(\"ipWa\",text06);                               // Erkl�render Text (Winkel)\r\n  ipW = getElement(\"ipWb\");                                // Eingabefeld (Winkel)\r\n  getElement(\"ipWc\",degree);                               // Einheit (Winkel)\r\n  getElement(\"ipMa\",text07);                               // Erkl�render Text (Masse)\r\n  ipM = getElement(\"ipMb\");                                // Eingabefeld (Masse)\r\n  getElement(\"ipMc\",kilogram);                             // Einheit (Masse)\r\n  getElement(\"ipGa\",text08);                               // Erkl�render Text (Fallbeschleunigung)\r\n  ipG = getElement(\"ipGb\");                                // Eingabefeld (Fallbeschleunigung)\r\n  getElement(\"ipGc\",meterPerSecond2);                      // Einheit (Fallbeschleunigung)\r\n  rbY = getElement(\"rbY\");                                 // Radiobutton (Position)\r\n  getElement(\"lbY\",text09);                                // Erkl�render Text (Position)\r\n  rbV = getElement(\"rbV\");                                 // Radiobutton (Geschwindigkeit)\r\n  getElement(\"lbV\",text10);                                // Erkl�render Text (Geschwindigkeit)\r\n  rbA = getElement(\"rbA\");                                 // Radiobutton (Beschleunigung)\r\n  getElement(\"lbA\",text11);                                // Erkl�render Text (Beschleunigung)\r\n  rbF = getElement(\"rbF\");                                 // Radiobutton (Kraft)\r\n  getElement(\"lbF\",text12);                                // Erkl�render Text (Kraft)\r\n  rbE = getElement(\"rbE\");                                 // Radiobutton (Energie)\r\n  getElement(\"lbE\",text13);                                // Erkl�render Text (Energie)\r\n  rbY.checked = true; nrSize = 1;                          // Zun�chst Position ausgew�hlt\r\n  getElement(\"author\",author);                             // Autor (eventuell �bersetzer)\r\n\r\n  on = slow = false;                                       // Animation und Zeitlupe zun�chst abgeschaltet\r\n  h0 = 5; v0 = 5; alpha0 = 45*DEG; m = 1; g = 9.81;        // Anfangswerte der Eingabefelder\r\n  updateInput();                                           // Eingabefelder aktualisieren\r\n  enableInput(true);                                       // Eingabe zun�chst m�glich\r\n  t = 0;                                                   // Zeitvariable (s)\r\n  calculation();                                           // Berechnungen (Seiteneffekt!)\r\n  calcPos12();                                             // Berechnung von pos1 und pos2\r\n  paint();                                                 // Zeichnen\r\n  bu1.onclick = reactionReset;                             // Reaktion auf Schaltknopf (Zur�ck)\r\n  bu2.onclick = reactionStart;                             // Reaktion auf Schaltknopf (Start/Pause/Weiter)\r\n  cbSlow.onclick = reactionSlow;                           // Reaktion auf Optionsfeld (Zeitlupe)\r\n  ipH.onkeydown = reactionEnter;                           // Reaktion auf Enter-Taste (Eingabefeld Ausgangsh�he)\r\n  ipV.onkeydown = reactionEnter;                           // Reaktion auf Enter-Taste (Eingabefeld Geschwindigkeit)\r\n  ipW.onkeydown = reactionEnter;                           // Reaktion auf Enter-Taste (Eingabefeld Winkel)\r\n  ipM.onkeydown = reactionEnter;                           // Reaktion auf Enter-Taste (Eingabefeld Masse)\r\n  ipG.onkeydown = reactionEnter;                           // Reaktion auf Enter-Taste (Eingabefeld Fallbeschleunigung)\r\n  rbY.onclick = reactionRadioButton;                       // Reaktion auf Radiobutton (Position)\r\n  rbV.onclick = reactionRadioButton;                       // Reaktion auf Radiobutton (Geschwindigkeit)\r\n  rbA.onclick = reactionRadioButton;                       // Reaktion auf Radiobutton (Beschleunigung)\r\n  rbF.onclick = reactionRadioButton;                       // Reaktion auf Radiobutton (Kraft)\r\n  rbE.onclick = reactionRadioButton;                       // Reaktion auf Radiobutton (Energie)\r\n\r\n  } // Ende der Methode start\r\n\r\n// Zustandsfestlegung f�r Schaltknopf Start/Pause/Weiter:\r\n\r\nfunction setButton2State (st) {\r\n  bu2.state = st;                                          // Zustand speichern\r\n  bu2.innerHTML = text02[st];                              // Text aktualisieren\r\n  }\r\n\r\n// Umschalten des Schaltknopfs Start/Pause/Weiter:\r\n\r\nfunction switchButton2 () {\r\n  var st = bu2.state;                                      // Momentaner Zustand\r\n  if (st == 0) st = 1;                                     // Falls Ausgangszustand, starten\r\n  else st = 3-st;                                          // Wechsel zwischen Animation und Unterbrechung\r\n  setButton2State(st);                                     // Neuen Zustand speichern, Text �ndern\r\n  }\r\n\r\n// Aktivierung bzw. Deaktivierung der Eingabefelder:\r\n// p ... Flag f�r m�gliche Eingabe\r\n\r\nfunction enableInput (p) {\r\n  ipH.readOnly = !p;\r\n  ipV.readOnly = !p;\r\n  ipW.readOnly = !p;\r\n  ipM.readOnly = !p;\r\n  ipG.readOnly = !p;\r\n  }\r\n\r\n// Reaktion auf Resetknopf:\r\n\r\nfunction reactionReset () {\r\n  setButton2State(0);                                      // Zustand des Schaltknopfs Start/Pause/Weiter\r\n  enableInput(true);                                       // Eingabefelder aktivieren\r\n  stopAnimation();                                         // Animation stoppen\r\n  t = 0;                                                   // Zeitvariable zur�cksetzen\r\n  reaction();                                              // Eingegebene Werte �bernehmen und rechnen\r\n  paint();                                                 // Neu zeichnen\r\n  }\r\n\r\n// Reaktion auf den Schaltknopf Start:\r\n\r\nfunction reactionStart () {\r\n  switchButton2();                                         // Zustand des Schaltknopfs �ndern\r\n  enableInput(false);                                      // Eingabefelder deaktivieren\r\n  if (bu2.state == 1) startAnimation();                    // Entweder Animation starten bzw. fortsetzen ...\r\n  else stopAnimation();                                    // ... oder stoppen\r\n  reaction();                                              // Eingegebene Werte �bernehmen und rechnen\r\n  }\r\n\r\n// Reaktion auf Optionsfeld Zeitlupe:\r\n// Seiteneffekt slow\r\n\r\nfunction reactionSlow () {\r\n  slow = cbSlow.checked;                                   // Flag setzen\r\n  }\r\n\r\n// Hilfsroutine: Eingabe �bernehmen und rechnen\r\n// Seiteneffekt h0, v0, alpha0, m, g, v0x, v0y, tW, w, hMax, vyMax, e, pix\r\n\r\nfunction reaction () {\r\n  input();                                                 // Eingegebene Werte �bernehmen (eventuell korrigiert)\r\n  calculation();                                           // Berechnungen\r\n  }\r\n\r\n// Reaktion auf Tastendruck (nur auf Enter-Taste):\r\n\r\nfunction reactionEnter (e) {\r\n  if (e.key && String(e.key) == \"Enter\"                    // Falls Entertaste (Firefox/Internet Explorer) ...\r\n  || e.keyCode == 13)                                      // Falls Entertaste (Chrome) ...\r\n    reaction();                                            // ... Daten �bernehmen und rechnen\r\n  paint();                                                 // Neu zeichnen\r\n  }\r\n\r\n// Reaktion auf Radiobutton:\r\n\r\nfunction reactionRadioButton () {\r\n  if (rbY.checked) nrSize = 1;                             // Entweder Position ...\r\n  else if (rbV.checked) nrSize = 2;                        // ... oder Geschwindigkeit ...\r\n  else if (rbA.checked) nrSize = 3;                        // ... oder Beschleunigung ...\r\n  else if (rbF.checked) nrSize = 4;                        // ... oder Kraft ...\r\n  else nrSize = 5;                                         // ... oder Energie ausgew�hlt\r\n  if (!on) paint();                                        // Falls Animation nicht l�uft, neu zeichnen\r\n  }\r\n\r\n// Animation starten oder fortsetzen:\r\n// Seiteneffekt on, timer, t0\r\n\r\nfunction startAnimation () {\r\n  on = true;                                               // Animation angeschaltet\r\n  timer = setInterval(paint,40);                           // Timer mit Intervall 0,040 s aktivieren\r\n  t0 = new Date();                                         // Neuer Anfangszeitpunkt\r\n  }\r\n\r\n// Animation stoppen:\r\n// Seiteneffekt on, timer\r\n\r\nfunction stopAnimation () {\r\n  on = false;                                              // Animation abgeschaltet\r\n  clearInterval(timer);                                    // Timer deaktivieren\r\n  }\r\n\r\n//-------------------------------------------------------------------------------------------------\r\n\r\n// Berechnung von Textpositionen:\r\n// Seiteneffekt pos1, pos2\r\n\r\nfunction calcPos12 () {\r\n  ctx.font = FONT1;                                        // Normaler Zeichensatz\r\n  pos1 = ctx.measureText(text18).width;                    // L�nge von \"Wurfweite\" (Pixel)\r\n  pos1 = Math.max(pos1,ctx.measureText(text19).width);     // L�nge von \"Maximalh�he\", falls gr��er\r\n  pos1 = Math.max(pos1,ctx.measureText(text20).width);     // L�nge von \"Wurfdauer\", falls gr��er\r\n  pos1 += 260;                                             // Textposition\r\n  pos2 = ctx.measureText(text26).width;                    // L�nge von \"Kinetische Energie\" (Pixel)\r\n  pos2 = Math.max(pos2,ctx.measureText(text27).width);     // L�nge von \"Potentielle Energie\", falls gr��er\r\n  pos2 = Math.max(pos2,ctx.measureText(text28).width);     // L�nge von \"Gesamtenergie\", falls gr��er\r\n  pos2 += 260;                                             // Textpositionen\r\n  }\r\n\r\n// Umrechnungsfaktor (Pixel/Einheit):\r\n// maxReal .... Maximale Streckenl�nge (m)\r\n// maxPixel ... Maximale Streckenl�nge (Pixel)\r\n// maxPixel sollte m�glichst durch 100 teilbar sein.\r\n\r\nfunction getFactor (maxReal, maxPixel) {\r\n  var q = maxPixel/maxReal;\r\n  var f = maxPixel;\r\n  while (true) {\r\n    f /= 2; if (f < q) break;\r\n    f /= 2.5; if (f < q) break;\r\n    f /= 2; if (f < q) break;\r\n    }\r\n  return f;\r\n  }\r\n\r\n// Schrittweite f�r Markierungen (in m):\r\n\r\nfunction getStep1 () {\r\n  var limit = 5, step1 = 1;\r\n  while (true) {\r\n    if (pix >= limit) return step1;\r\n    limit /= 10; step1 *= 10;\r\n    }\r\n  }\r\n\r\n// Schrittweite f�r beschriftete Markierungen (in m):\r\n\r\nfunction getStep2 () {\r\n  var limit = 50, step1 = 1;\r\n  while (true) {\r\n    if (pix >= limit) return step1;\r\n    limit /= 2; step1 *= 2;\r\n    if (pix >= limit) return step1;\r\n    limit /= 2.5; step1 = 5*step1/2;\r\n    if (pix >= limit) return step1;\r\n    limit /= 2; step1 *= 2;\r\n    }\r\n  }\r\n\r\n// Berechnungen:\r\n// Seiteneffekt v0x, v0y, tW, w, hMax, vyMax, e, pix\r\n\r\nfunction calculation () {\r\n  v0x = v0*Math.cos(alpha0);                               // Waagrechte Geschwindigkeitskomponente am Anfang (m/s)\r\n  v0y = v0*Math.sin(alpha0);                               // Senkrechte Geschwindigkeitskomponente am Anfang (m/s)\r\n  if (Math.cos(alpha0) < 1e-10) v0x = 0;                   // Eventuelle Rundungsfehler vermeiden\r\n  tW = (v0y+Math.sqrt(v0y*v0y+2*g*h0))/g;                  // Wurfdauer (s)\r\n  w = v0x*tW;                                              // Wurfweite (m)\r\n  if (v0y > 0) {                                           // Falls Wurf nach oben ...\r\n    var t = v0y/g;                                         // ... Zeitpunkt f�r maximale H�he (s)\r\n    hMax = h0+v0y*t-g*t*t/2;                               // ... Maximale H�he (m)\r\n    }\r\n  else hMax = h0;                                          // ... Sonst maximale H�he gleich Ausgangsh�he (m)\r\n  vyMax = Math.abs(v0y-g*tW);                              // Maximalbetrag der senkrechten Geschwindigkeitskomponente (m/s)\r\n  e = m*v0*v0/2+m*g*h0;                                    // Gesamtenergie (J)\r\n  pix = getFactor(Math.max(w,hMax),300);                   // Umrechnungsfaktor (Pixel pro m)\r\n  if (pix*hMax > 220) pix /= 2;                            // Falls zu wenig Platz, Umrechnungsfaktor halbieren\r\n  }\r\n\r\n// Umwandlung einer Zahl in eine Zeichenkette:\r\n// n ..... Gegebene Zahl\r\n// d ..... Zahl der Stellen\r\n// fix ... Flag f�r Nachkommastellen (im Gegensatz zu g�ltigen Ziffern)\r\n\r\nfunction ToString (n, d, fix) {\r\n  var s = (fix ? n.toFixed(d) : n.toPrecision(d));         // Zeichenkette mit Dezimalpunkt\r\n  return s.replace(\".\",decimalSeparator);                  // Eventuell Punkt durch Komma ersetzen\r\n  }\r\n\r\n// Eingabe einer Zahl\r\n// ef .... Eingabefeld\r\n// d ..... Zahl der Stellen\r\n// fix ... Flag f�r Nachkommastellen (im Gegensatz zu g�ltigen Ziffern)\r\n// min ... Minimum des erlaubten Bereichs\r\n// max ... Maximum des erlaubten Bereichs\r\n// R�ckgabewert: Zahl oder NaN\r\n\r\nfunction inputNumber (ef, d, fix, min, max) {\r\n  var s = ef.value;                                        // Zeichenkette im Eingabefeld\r\n  s = s.replace(\",\",\".\");                                  // Eventuell Komma in Punkt umwandeln\r\n  var n = Number(s);                                       // Umwandlung in Zahl, falls m�glich\r\n  if (isNaN(n)) n = 0;                                     // Sinnlose Eingaben als 0 interpretieren\r\n  if (n < min) n = min;                                    // Falls Zahl zu klein, korrigieren\r\n  if (n > max) n = max;                                    // Falls Zahl zu gro�, korrigieren\r\n  ef.value = ToString(n,d,fix);                            // Eingabefeld eventuell korrigieren\r\n  return n;                                                // R�ckgabewert\r\n  }\r\n\r\n// Gesamte Eingabe:\r\n// Seiteneffekt h0, v0, alpha0, m, g\r\n\r\nfunction input () {\r\n  h0 = inputNumber(ipH,3,true,0,100);                      // Ausgangsh�he (m)\r\n  v0 = inputNumber(ipV,3,true,0,100);                      // Anfangsgeschwindigkeit (m/s)\r\n  alpha0 = inputNumber(ipW,3,true,-90,90)*DEG;             // Winkel (Eingabe in Grad, Umrechnung in Bogenma�)\r\n  m = inputNumber(ipM,3,true,0.1,10);                      // Masse (kg)\r\n  g = inputNumber(ipG,3,true,1,100);                       // Fallbeschleunigung (m/s�)\r\n  }\r\n\r\n// Aktualisierung der Eingabefelder:\r\n\r\nfunction updateInput () {\r\n  ipH.value = ToString(h0,3,true);                         // Eingabefeld f�r Ausgangsh�he\r\n  ipV.value = ToString(v0,3,true);                         // Eingabefeld f�r Anfangsgeschwindigkeit\r\n  ipW.value = ToString(alpha0/DEG,3,true);                 // Eingabefeld f�r Winkel\r\n  ipM.value = ToString(m,3,true);                          // Eingabefeld f�r Masse\r\n  ipG.value = ToString(g,3,true);                          // Eingabefeld f�r Fallbeschleunigung\r\n  }\r\n\r\n//-------------------------------------------------------------------------------------------------\r\n\r\n// Neuer Grafikpfad mit Standardwerten:\r\n\r\nfunction newPath () {\r\n  ctx.beginPath();                                         // Neuer Grafikpfad\r\n  ctx.strokeStyle = \"#000000\";                             // Linienchwarz\r\n  ctx.lineWidth = 1;                                       // Liniendicke 1\r\n  }\r\n\r\n// Linie zeichnen:\r\n// x1, y1 ... Anfangspunkt\r\n// x2, y2 ... Endpunkt\r\n// c ........ optional, Defaultwert schwarz)\r\n// w ........ Liniendicke (optional, Defaultwert 1)\r\n\r\nfunction line (x1, y1, x2, y2, c, w) {\r\n  newPath();                                               // Neuer Grafikpfad (Standardwerte)\r\n  if (c) ctx.strokeStyle = c;                              // Linienestlegen\r\n  if (w) ctx.lineWidth = w;                                // Liniendicke festlegen\r\n  ctx.moveTo(x1,y1); ctx.lineTo(x2,y2);                    // Linie vorbereiten\r\n  ctx.stroke();                                            // Linie zeichnen\r\n  }\r\n\r\n// Rechteck mit schwarzem Rand:\r\n// (x,y) ... Koordinaten der Ecke links oben (Pixel)\r\n// w ....... Breite (Pixel)\r\n// h ....... H�he (Pixel)\r\n// c ....... F�lloptional)\r\n\r\nfunction rectangle (x, y, w, h, c) {\r\n  if (c) ctx.fillStyle = c;                                // F�ll newPath();                                               // Neuer Pfad\r\n  ctx.fillRect(x,y,w,h);                                   // Rechteck ausf�llen\r\n  ctx.strokeRect(x,y,w,h);                                 // Rand zeichnen\r\n  }\r\n\r\n// Kreisscheibe mit schwarzem Rand:\r\n// (x,y) ... Mittelpunktskoordinaten (Pixel)\r\n// r ....... Radius (Pixel)\r\n// c ....... F�lloptional)\r\n\r\nfunction circle (x, y, r, c) {\r\n  if (c) ctx.fillStyle = c;                                // F�ll newPath();                                               // Neuer Pfad\r\n  ctx.arc(x,y,r,0,PI2,true);                               // Kreis vorbereiten\r\n  if (c) ctx.fill();                                       // Kreis ausf�llen, falls gew�nscht\r\n  ctx.stroke();                                            // Rand zeichnen\r\n  }\r\n\r\n// Pfeil zeichnen:\r\n// x1, y1 ... Anfangspunkt\r\n// x2, y2 ... Endpunkt\r\n// w ........ Liniendicke (optional)\r\n// Zu beachten: Die ird durch ctx.strokeStyle bestimmt.\r\n\r\nfunction arrow (x1, y1, x2, y2, w) {\r\n  if (!w) w = 1;                                           // Falls Liniendicke nicht definiert, Defaultwert\r\n  var dx = x2-x1, dy = y2-y1;                              // Vektorkoordinaten\r\n  var length = Math.sqrt(dx*dx+dy*dy);                     // L�nge\r\n  if (length == 0) return;                                 // Abbruch, falls L�nge 0\r\n  dx /= length; dy /= length;                              // Einheitsvektor\r\n  var s = 2.5*w+7.5;                                       // L�nge der Pfeilspitze\r\n  var xSp = x2-s*dx, ySp = y2-s*dy;                        // Hilfspunkt f�r Pfeilspitze\r\n  var h = 0.5*w+3.5;                                       // Halbe Breite der Pfeilspitze\r\n  var xSp1 = xSp-h*dy, ySp1 = ySp+h*dx;                    // Ecke der Pfeilspitze\r\n  var xSp2 = xSp+h*dy, ySp2 = ySp-h*dx;                    // Ecke der Pfeilspitze\r\n  xSp = x2-0.6*s*dx; ySp = y2-0.6*s*dy;                    // Einspringende Ecke der Pfeilspitze\r\n  ctx.beginPath();                                         // Neuer Pfad\r\n  ctx.lineWidth = w;                                       // Liniendicke\r\n  ctx.moveTo(x1,y1);                                       // Anfangspunkt\r\n  if (length < 5) ctx.lineTo(x2,y2);                       // Falls kurzer Pfeil, weiter zum Endpunkt, ...\r\n  else ctx.lineTo(xSp,ySp);                                // ... sonst weiter zur einspringenden Ecke\r\n  ctx.stroke();                                            // Linie zeichnen\r\n  if (length < 5) return;                                  // Falls kurzer Pfeil, keine Spitze\r\n  ctx.beginPath();                                         // Neuer Pfad f�r Pfeilspitze\r\n  ctx.fillStyle = ctx.strokeStyle;                         // F�llie Linien ctx.moveTo(xSp,ySp);                                     // Anfangspunkt (einspringende Ecke)\r\n  ctx.lineTo(xSp1,ySp1);                                   // Weiter zum Punkt auf einer Seite\r\n  ctx.lineTo(x2,y2);                                       // Weiter zur Spitze\r\n  ctx.lineTo(xSp2,ySp2);                                   // Weiter zum Punkt auf der anderen Seite\r\n  ctx.closePath();                                         // Zur�ck zum Anfangspunkt\r\n  ctx.fill();                                              // Pfeilspitze zeichnen\r\n  }\r\n\r\n// Digitaluhr:\r\n\r\nfunction clock () {\r\n  var x = 140, y = 30;                                     // Position des Mittelpunkts (Pixel)\r\n  rectangle(x-60,y-15,120,30,colorClock1);                 // Rechteck f�r Geh�use\r\n  rectangle(x-50,y-10,100,20,colorClock2);                 // Rechteck f�r Anzeige\r\n  ctx.font = FONT2;                                        // Zeichensatz f�r Ziffern\r\n  ctx.fillStyle = colorClock3;                             // �r Ziffern\r\n  var s = ToString(t,3,true) + \" \"+secondUnicode;          // Zeichenkette\r\n  ctx.textAlign = \"center\";                                // Textausrichtung zentriert\r\n  ctx.fillText(s,x,y+5);                                   // Zeit ausgeben\r\n  ctx.font = FONT1;                                        // Normaler Zeichensatz\r\n  }\r\n\r\n// Koordinatenberechnung, Kugel:\r\n// Seiteneffekt x, y, x0, y0\r\n\r\nfunction ball () {\r\n  x = v0x*t; y = h0+v0y*t-g*t*t/2;                         // Momentane Position (m)\r\n  if (y < 0) y = 0;                                        // Falls Wurf beendet, y-Koordinate 0\r\n  x0 = xU+pix*x; y0 = yU-pix*y;                            // Momentane Position (Pixel)\r\n  circle(x0,y0,3.5,\"#000000\");                             // Ausgef�llter Kreis\r\n  }\r\n\r\n// Koordinatensystem:\r\n\r\nfunction axes () {\r\n  newPath();                                               // Neuer Grafikpfad (Standardwerte)\r\n  arrow(xU-10,yU,xU+355,yU);                               // Waagrechte Achse\r\n  arrow(xU,yU+10,xU,yU-255);                               // Senkrechte Achse\r\n  var step1 = getStep1();                                  // Schrittweite f�r Ticks\r\n  var step2 = getStep2();                                  // Schrittweite f�r beschriftete Ticks\r\n  ctx.textAlign = \"center\";                                // Textausrichtung zentriert\r\n  ctx.fillStyle = \"#000000\";                               // Textchwarz\r\n  for (var i=1; i<=330/pix; i++) {                         // F�r alle Ticks der waagrechten Achse ...\r\n    var x = xU+i*pix;                                      // x-Koordinate (Pixel)\r\n    var d = (i%step2==0 ? 5 : 2);                          // Halbe Strichl�nge\r\n    if (i%step1 == 0) line(x,yU-d,x,yU+d);                 // Tick zeichnen\r\n    if (i%step2 == 0) ctx.fillText(\"\"+i,x,yU+18);          // Tick beschriften\r\n    }\r\n  ctx.textAlign = \"right\";                                 // Textausrichtung rechtsb�ndig\r\n  for (var i=1; i<=220/pix; i++) {                         // F�r alle Ticks der senkrechten Achse ...\r\n    var y = yU-i*pix;                                      // y-Koordinate (Pixel)\r\n    var d = (i%step2==0 ? 5 : 2);                          // Halbe Strichl�nge\r\n    if (i%step1 == 0) line(xU-d,y,xU+d,y);                 // Tick zeichnen\r\n    if (i%step2 == 0) ctx.fillText(\"\"+i,xU-7,y+4);         // Tick beschriften\r\n    }\r\n  ctx.textAlign = \"center\";                                // Textausrichtung zentriert\r\n  ctx.fillText(symbolX,xU+350,yU+18);                      // Name der waagrechten Koordinate (x)\r\n  ctx.fillText(text14,xU+350,yU+30);                       // Einheitsangabe (in m)\r\n  ctx.fillText(symbolY,xU-20,yU-245);                      // Name der senkrechten Koordinate (y)\r\n  ctx.fillText(text14,xU-20,yU-230);                       // Einheitsangabe (in m)\r\n  }\r\n\r\n// Wurfparabel (N�herung durch Polygonzug):\r\n\r\nfunction orbit () {\r\n  newPath();                                               // Neuer Grafikpfad (Standardwerte)\r\n  ctx.strokeStyle = colorPosition;                         // �r Position\r\n  if (v0x < 1e-10) {                                       // Falls senkrechter Wurf ...\r\n    line(xU,yU,xU,yU-hMax*pix); return;                    // ... Senkrechte Linie\r\n    }\r\n  var gH = g/2;                                            // Halbe Fallbeschleunigung\r\n  var xx = xU, yy = yU-h0*pix;                             // Anfangsposition (Pixel)\r\n  ctx.moveTo(xx,yy);                                       // Anfangspunkt des Polygonzugs\r\n  var t = 0;                                               // Zeitvariable (s)\r\n  while (t < tW) {                                         // Solange Wurf nicht zu Ende ...\r\n    xx++;                                                  // Waagrechte Koordinate erh�hen (Pixel)\r\n    var x = (xx-xU)/pix;                                   // x-Koordinate des neuen Punkts (m)\r\n    t = x/v0x;                                             // Zeit f�r neuen Punkt (s)\r\n    var y = h0+t*(v0y-gH*t);                               // y-Koordinate des neuen Punkts (m)\r\n    yy = yU-y*pix;                                         // Senkrechte Koordinate (Pixel)\r\n    ctx.lineTo(xx,yy);                                     // Strecke zum Polygonzug hinzuf�gen\r\n    }\r\n  ctx.stroke();                                            // Polygonzug zeichnen\r\n  }\r\n\r\n// Grafiktext (Wert einer Gr��e):\r\n// beg ..... Text vor der Zahl\r\n// val ..... Zahl\r\n// end ..... Text nach der Zahl (z. B. Einheit)\r\n// (x,y) ... Position\r\n\r\nfunction writeValue (beg, val, end, x, y) {\r\n  var s = beg+ToString(val,3,false)+end;\r\n  ctx.fillText(s,x,y);\r\n  }\r\n\r\n// Darstellung der Position: Zahlenwerte, Markierungen auf den Achsen\r\n\r\nfunction position () {\r\n  newPath();                                               // Neuer Grafikpfad (Standardwerte)\r\n  ctx.fillStyle = colorPosition;                           // �r Position\r\n  var x1 = 220, x2 = 240, x3 = 320;                        // Positionsangaben\r\n  ctx.fillText(text15,x1,25);                              // Text (Position)\r\n  writeValue(symbolX+\" = \",x,\" \"+meterUnicode,x2,40);      // Wert der x-Koordinate (m)\r\n  ctx.fillText(text16,x3,40);                              // Text (waagrecht)\r\n  writeValue(symbolY+\" = \",y,\" \"+meterUnicode,x2,55);      // Wert der y-Koordinate (m)\r\n  ctx.fillText(text17,x3,55);                              // Text (senkrecht)\r\n  ctx.fillText(text18,x1,80);                              // Text (Wurfweite)\r\n  writeValue(\"\",w,\" \"+meterUnicode,pos1,80);               // Wert der Wurfweite (m)\r\n  ctx.fillText(text19,x1,95);                              // Text (Maximale H�he)\r\n  writeValue(\"\",hMax,\" \"+meterUnicode,pos1,95);            // Wert der maximalen H�he (m)\r\n  ctx.fillText(text20,x1,120);                             // Text (Dauer)\r\n  writeValue(\"\",tW,\" \"+secondUnicode,pos1,120);            // Wert der Wurfdauer (s)\r\n  line(x0,yU-5,x0,yU+5,colorPosition);                     // Markierung auf der x-Achse\r\n  line(xU-5,y0,xU+5,y0,colorPosition);                     // Markierung auf der y-Achse\r\n  }\r\n\r\n// Winkelmarkierung:\r\n// x, y ... Scheitel\r\n// a ...... Winkel gegen�ber der Waagrechten (Bogenma�, kann auch negativ sein)\r\n\r\nfunction angle (x, y, a) {\r\n  var r = 20;                                              // Radius (Pixel)\r\n  newPath();                                               // Neuer Grafikpfad (Standardwerte)\r\n  ctx.fillStyle = colorAngle;                              // F�ll ctx.moveTo(x,y);                                         // Scheitel als Anfangspunkt\r\n  ctx.lineTo(x+r,y);                                       // Linie nach rechts\r\n  ctx.arc(x,y,r,0,-a,a>0);                                 // Kreisbogen\r\n  ctx.closePath();                                         // Zur�ck zum Scheitel\r\n  ctx.fill(); ctx.stroke();                                // Kreissektor ausf�llen, Rand zeichnen\r\n  }\r\n\r\n// Darstellung der Geschwindigkeit: Vektorpfeil, Zerlegung in Komponenten, Zahlenwerte\r\n\r\nfunction velocity () {\r\n  var vy = v0y-g*t;                                        // Senkrechte Geschwindigkeitskomponente (m/s)\r\n  var alpha = Math.atan(vy/v0x);                           // Neigungswinkel (Bogenma�)\r\n  angle(x0,y0,alpha);                                      // Winkelmarkierung\r\n  orbit();                                                 // Wurfbahn\r\n  var l = vyMax*10;                                        // Maximale Pfeill�nge, falls 10 Pixel f�r 1 m/s\r\n  var f = (l>120 ? l/120 : 1);                             // Faktor (mindestens gleich 1)\r\n  var dxPix = v0x*10/f;                                    // Waagrechte Komponente (Pixel)\r\n  var dyPix = vy*10/f;                                     // Senkrechte Komponente (Pixel)\r\n  ctx.strokeStyle = colorVelocity;                         // �r Geschwindigkeit\r\n  arrow(x0,y0,x0+dxPix,y0-dyPix,3);                        // Dicker Pfeil f�r Geschwindigkeit\r\n  arrow(x0,y0,x0+dxPix,y0);                                // D�nner Pfeil f�r waagrechte Komponente\r\n  arrow(x0,y0,x0,y0-dyPix);                                // D�nner Pfeil f�r senkrechte Komponente\r\n  ctx.fillText(text21,220,25);                             // Text (Geschwindigkeitskomponenten)\r\n  var w1 = ctx.measureText(symbolVelocity).width;          // Breite des Geschwindigkeitssymbols (v, Pixel)\r\n  var w2 = 2*w1+ctx.measureText(\"  \").width;               // Abstand (Pixel)\r\n  var mps = \" \"+meterPerSecondUnicode;                     // Einheit m/s mit Leerzeichen davor\r\n  ctx.fillText(symbolVelocity,240,40);                     // Geschwindigkeitssymbol (v)\r\n  ctx.fillText(symbolX,240+w1,45);                         // Index (x)\r\n  writeValue(\"= \",v0x,mps,240+w2,40);                      // Gleichheitszeichen und Zahlenwert mit Einheit m/s\r\n  ctx.fillText(text16,330,40);                             // Text (waagrecht)\r\n  ctx.fillText(symbolVelocity,240,55);                     // Geschwindigkeitssymbol (v)\r\n  ctx.fillText(symbolY,240+w1,60);                         // Index (y)\r\n  writeValue(\"= \",vy,mps,240+w2,55);                       // Gleichheitszeichen und Zahlenwert mit Einheit m/s\r\n  ctx.fillText(text17,330,55);                             // Text (senkrecht)\r\n  ctx.fillText(text22,220,80);                             // Text (Geschwindigkeitsbetrag)\r\n  var v = Math.sqrt(v0x*v0x+vy*vy);                        // Betrag der Geschwindigkeit (m/s)\r\n  writeValue(\"\",v,mps,240,95);                             // Zahlenwert (Geschwindigkeitsbetrag in m/s)\r\n  ctx.fillText(text23,220,120);                            // Text (Winkel gegen�ber der Waagrechten)\r\n  writeValue(\"\",alpha/DEG,degreeUnicode,350,120);          // Zahlenwert (Winkel in Grad)\r\n  ctx.strokeStyle = \"#000000\";                             // chwarz\r\n  line(x0+dxPix,y0,x0+dxPix,y0-dyPix);                     // Senkrechte Hilfslinie\r\n  line(x0,y0-dyPix,x0+dxPix,y0-dyPix);                     // Waagrechte Hilfslinie\r\n  }\r\n\r\n// Darstellung der Beschleunigung: Vektorpfeil, Zahlenwert\r\n\r\nfunction acceleration () {\r\n  var len = (g<30 ? g*4 : 120);                            // Pfeill�nge (Pixel)\r\n  ctx.strokeStyle = colorAcceleration;                     // �r Beschleunigung\r\n  arrow(x0,y0,x0,y0+len,3);                                // Pfeil f�r Beschleunigung\r\n  ctx.fillText(text24,220,25);                             // Text (Beschleunigung)\r\n  writeValue(\"\",g,\" \"+meterPerSecond2Unicode,330,25);      // Zahlenwert (Beschleunigung in m/s�)\r\n  }\r\n\r\n// Darstellung der Kraft: Vektorpfeil, Zahlenwert\r\n\r\nfunction force () {\r\n  var len = (g<30/m ? g*4*m : 120);                        // Pfeill�nge (Pixel)\r\n  ctx.strokeStyle = colorForce;                            // �r Kraft\r\n  arrow(x0,y0,x0,y0+len,3);                                // Pfeil f�r Kraft\r\n  ctx.fillText(text25,220,25);                             // Text (Kraft)\r\n  writeValue(\"\",m*g,\" \"+newtonUnicode,330,25);             // Zahlenwert (Kraft in N)\r\n  }\r\n\r\n// Darstellung der Energie: Zahlenwerte\r\n\r\nfunction energy () {\r\n  var ePot = m*g*y;                                        // Potentielle Energie (J)\r\n  var j = \" \"+jouleUnicode;                                // Einheit J mit Leerzeichen davor\r\n  ctx.fillStyle = colorVelocity;                           // �r Geschwindigkeit\r\n  ctx.fillText(text26,220,25);                             // Text (kinetische Energie)\r\n  writeValue(\"\",e-ePot,j,pos2,25);                         // Zahlenwert (kinetische Energie in J)\r\n  ctx.fillStyle = colorPosition;                           // �r Position\r\n  ctx.fillText(text27,220,40);                             // Text (potentielle Energie)\r\n  writeValue(\"\",ePot,j,pos2,40);                           // Zahlenwert (potentielle Energie in J)\r\n  ctx.fillStyle = \"#000000\";                               // Schriftchwarz\r\n  ctx.fillText(text28,220,65);                             // Text (Gesamtenergie)\r\n  writeValue(\"\",e,j,pos2,65);                              // Zahlenwert (Gesamtenergie in J)\r\n  }\r\n\r\n// Grafikausgabe:\r\n\r\nfunction paint () {\r\n  ctx.fillStyle = colorBackground;                         // Hintergrund ctx.fillRect(0,0,width,height);                          // Hintergrund ausf�llen\r\n  if (on) {                                                // Falls Animation angeschaltet ...\r\n    var t1 = new Date();                                   // ... Aktuelle Zeit\r\n    var dt = (t1-t0)/1000;                                 // ... L�nge des Zeitintervalls (s)\r\n    if (slow) dt /= 10;                                    // ... Falls Zeitlupe, Zeitintervall durch 10 dividieren\r\n    t += dt;                                               // ... Zeitvariable aktualisieren\r\n    t0 = t1;                                               // ... Neuer Anfangszeitpunkt\r\n    if (t > tW) t = tW;                                    // ... Am Ende des Wurfs Zeitvariable stoppen\r\n    }\r\n  ctx.font = FONT1;                                        // Normaler Zeichensatz\r\n  var vv = yU+3;                                           // Oberer Rand des Untergrunds (Pixel)\r\n  rectangle(0,vv,width,height-vv,colorGround);             // Untergrund\r\n  ball();                                                  // Geworfene Kugel\r\n  axes();                                                  // Koordinatensystem\r\n  clock();                                                 // Digitaluhr\r\n  if (nrSize != 2) orbit();                                // Wurfbahn (Winkelmarkierung vorher zeichnen!)\r\n  ctx.textAlign = \"left\";                                  // Ab hier Textausrichtung immer linksb�ndig\r\n  switch (nrSize) {                                        // Je nach dargestellter Gr��e ...\r\n    case 1: position(); break;                             // Position\r\n    case 2: velocity(); break;                             // Geschwindigkeit\r\n    case 3: acceleration(); break;                         // Beschleunigung\r\n    case 4: force(); break;                                // Kraft\r\n    case 5: energy(); break;                               // Energie\r\n    }\r\n  }\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\",start,false); // Nach dem Laden der Seite Start-Methode aufrufen\r\n\r\n\r\n\r\n\r\n\r\n","// Slate litter, English texts\r\nvar text01 = \"Reset\";\r\nvar text02 = [\"Start\", \"Pause\", \"Resume\"];\r\nvar text03 = \"Slow motion\";\r\nvar text04 = \"Initial height:\";\r\nvar text05 = \"Initial speed:\";\r\nvar text06 = \"Angle:\";\r\nvar text07 = \"Mass:\";\r\nvar text08 = \"Gravitational acceleration:\";\r\nvar text09 = \"Position\";\r\nvar text10 = \"Velocity\";\r\nvar text11 = \"Acceleration\";\r\nvar text12 = \"Force\";\r\nvar text13 = \"Energy\";\r\n\r\nvar author = \"W. Fendt 2000\";\r\n\r\n// Symbole und Einheiten:\r\n\r\nvar decimalSeparator = \".\";                                // Dezimaltrennzeichen (Punkt)\r\nvar meter = \"m\";                                           // Abk�rzung f�r Meter\r\nvar meterPerSecond = \"m/s\";                                // Abk�rzung f�r Meter pro Sekunde\r\nvar meterPerSecond2 = \"m/s&sup2;\";                         // Abk�rzung f�r Meter pro Sekunde hoch 2\r\nvar kilogram = \"kg\";                                       // Abk�rzung f�r Kilogramm\r\nvar degree = \"&deg;\";                                      // Abk�rzung f�r Grad\r\n\r\n// Texte in Unicode-Schreibweise:\r\n\r\nvar text14 = \"(in m)\";                                     // Einheitenangabe f�r Koordinatenachsen\r\nvar text15 = \"Position:\";\r\nvar text16 = \"(horizontal)\";\r\nvar text17 = \"(vertical)\";\r\nvar text18 = \"Horizontal distance:\";\r\nvar text19 = \"Maximum height:\";\r\nvar text20 = \"Time:\";\r\nvar text21 = \"Components of velocity:\";\r\nvar text22 = \"Magnitude of velocity:\";\r\nvar text23 = \"Angle:\";\r\nvar text24 = \"Acceleration:\";\r\nvar text25 = \"Force:\";\r\nvar text26 = \"Kinetic energy:\";\r\nvar text27 = \"Potential energy:\";\r\nvar text28 = \"Total energy:\";\r\n\r\n// Symbole und Einheiten:\r\n\r\nvar symbolX = \"x\";                                         // Symbol f�r waagrechte Koordinate\r\nvar symbolY = \"y\";                                         // Symbol f�r senkrechte Koordinate\r\nvar symbolVelocity = \"v\";                                  // Symbol f�r Geschwindigkeit\r\nvar meterUnicode = \"m\";                                    // Abk�rzung f�r Meter\r\nvar secondUnicode = \"s\";                                   // Abk�rzung f�r Sekunde\r\nvar meterPerSecondUnicode = \"m/s\";                         // Abk�rzung f�r Meter pro Sekunde\r\nvar meterPerSecond2Unicode = \"m/s\\u00b2\";                  // Abk�rzung f�r Meter pro Sekunde hoch 2\r\nvar newtonUnicode = \"N\";                                   // Abk�rzung f�r Newton\r\nvar jouleUnicode = \"J\";                                    // Abk�rzung f�r Joule\r\nvar degreeUnicode = \"\\u00b0\";                              // Abk�rzung f�r Grad\r\n\r\n\r\n\r\n","\r\n      function myFunction() {\r\n        document.getElementById(\"myDropdown\").classList.toggle(\"show\");\r\n      }\r\n\r\n        // Close the dropdown if the user clicks outside of it\r\n      window.onclick = function(e) {\r\n        if (!e.target.matches('.dropbtn')) {\r\n        var myDropdown = document.getElementById(\"myDropdown\");\r\n          if (myDropdown.classList.contains('show')) {\r\n            myDropdown.classList.remove('show');\r\n          }\r\n        }\r\n      }\r\n"],"sourceRoot":""}